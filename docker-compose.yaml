services:
  ### S3 Bucket
  s3:
    image: localstack/localstack
    ports:
      - "4566:4566"
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}
    volumes:
      - ./aws_scripts:/etc/localstack/init/ready.d
    networks:
      - internal
      - public
  ### Container copies heart stroke data to 'heart-stroke-data' bucket after start and then is
  # closed
  s3_initial_setup:
    image: localstack/localstack
    ports:
      - "4567:6666"
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}
      - S3_ENDPOINT_URL=http://s3:4566/
    volumes:
      - ./data/raw:/tmp/localstack
    depends_on:
      - s3
    restart: "no"
    entrypoint: [ "sh", "-c", "sleep 10 && aws --endpoint-url=$$S3_ENDPOINT_URL s3 cp /tmp/localstack/initial_heart_stroke_data.csv s3://heart-stroke-data" ]
    networks:
      - internal
  wait-for-db:
    image: atkrad/wait4x
    depends_on:
      - database
    command: tcp database:5432 -t 90s -i 250ms
    networks:
      - internal
  ### Mlflow Service
  mlflow_service:
    image: mlflow_service:${DOCKER_IMAGE_TAG}
    depends_on:
      s3_initial_setup:
        condition:
          service_completed_successfully
      wait-for-db:
        condition: service_completed_successfully
    # due to this issue https://github.com/conda/conda/issues/12287 with psycopg2 I could not connect mlflow to Postgres server using my python 3.9 env
    # TO DO: test everything on python 3.10 and connect to postgres database
    entrypoint: mlflow server --host 0.0.0.0 --port 5000 --default-artifact-root s3://mlflow-artifacts/ --backend-store-uri sqlite:///mlflow.db
    ports:
      - "5000:5000"
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}
      - MLFLOW_S3_ENDPOINT_URL=http://s3:4566
    networks:
      - internal
      - public
  ### Postgres Database
  database:
    image: postgres:15.2-alpine
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=prod_db
    expose:
      - 5432
    volumes:
      - db:/var/lib/postgresql/data
    networks:
      - internal
      - public
  ### Prefect Server API and UI
  prefect_server:
    image: prefecthq/prefect:2.11.3-python3.9
    restart: always
    volumes:
      - prefect:/root/.prefect
    entrypoint: [ "/opt/prefect/entrypoint.sh","prefect", "server", "start" ]
    environment:
      - PREFECT_UI_URL=http://127.0.0.0:4200/api
      - PREFECT_API_URL=http://127.0.0.1:4200/api
      - PREFECT_SERVER_API_HOST=0.0.0.0
      - PREFECT_API_DATABASE_CONNECTION_URL=postgresql+asyncpg://postgres:postgres@database:5432/prod_db
    ports:
      - "4200:4200"
    depends_on:
      - database
    networks:
      - internal
      - public
  ### Prefect Execution Environment, here workers live
  prefect_execution_environment:
    image: prefect_execution_environment:${DOCKER_IMAGE_TAG}
    restart: always
    entrypoint: [ "/opt/prefect/entrypoint.sh", "prefect", "worker", "start", "-p", "general_worker", "-t", "process" ]
    volumes:
      - ./src:/app/src
    depends_on:
      prefect_server:
        condition: service_started
      s3_initial_setup:
        condition: service_completed_successfully
    healthcheck:
      test: curl --fail  http://mlflow_service:5000/api/2.0/mlflow/registered-models/get?name=HeartStroke || exit 1
      interval: 1m
      retries: 3
      start_period: 1m
      timeout: 10s
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}
      - PREFECT_API_URL=http://prefect_server:4200/api
      - MLFLOW_HOST=http://mlflow_service:5000
      - MLFLOW_S3_ENDPOINT_URL=http://s3:4566
      - S3_BUCKET_URL=http://s3:4566/
    networks:
      - internal
  ### Prefect development environment, here lives flows' code, the flow to train an initial model
  # is started here as well-
  prefect_development_environment:
    image: prefect_development_environment:${DOCKER_IMAGE_TAG}
    depends_on:
      prefect_server:
        condition:
          service_started
      s3_initial_setup:
        condition:
          service_completed_successfully
    volumes:
      - ./src:/app/src
    restart: "no"
    tty: true
    entrypoint: [ "sh", "-c", "sh flows_orchestration_scripts.sh" ]
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}
      - PREFECT_API_URL=http://prefect_server:4200/api
      - MLFLOW_HOST=http://mlflow_service:5000
      - MLFLOW_S3_ENDPOINT_URL=http://s3:4566
      - S3_BUCKET_URL=http://s3:4566/
    networks:
      - internal
      - public
  ### Flask Web Service with one 'predict' endpoint
  web_service_prediction:
    restart: always
    image: heart-stroke-prediction-service:${DOCKER_IMAGE_TAG}
    depends_on:
      prefect_development_environment:
        condition:
          service_completed_successfully
      mlflow_service:
        condition:
          service_started
      prefect_execution_environment:
        condition:
          service_healthy
    ports:
      - "9696:9696"
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}
      - MLFLOW_HOST=http://mlflow_service:5000
      - MLFLOW_S3_ENDPOINT_URL=http://s3:4566
    networks:
      - internal
      - public

volumes:
  prefect:
  db:
networks:
  internal:
  public:
    driver: bridge
